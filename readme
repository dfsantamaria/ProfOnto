Copyright 2019 Department of Mathematics and Computer Science, University of Catania, Italy.

Domenico Cantone - domenico.cantone@unict.it, 
Carmelo Fabio Longo - fabio.longo@unict.it, 
Marianna Nicolosi Asmundo - nicolosi@dmi.unict.it, 
Daniele Francesco Santamaria - santamaria@dmi.unict.it, 
Corrado Santoro - santoro@dmi.unict.it


Prof-Onto

Prof-Onto is a domotic system based on the ontology OASIS - an Ontology for Agent Systems and Integration of Services 
(http://www.dmi.unict.it/~santamaria/projects/oasis/oasis.php)- and exploiting  Phidias - PytHon Interactive Declarative 
Intelligent Agent System (https://github.com/corradosantoro/phidias) - 

Version 0.1. In the current version, Prof-Onto is a domotic simulation enviroment, i.e, no physical devices can be actually connected but
communications are emulated via OWL serialized files.


Disclaimer:

This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by 
the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a 
copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.

Software and its documentation made available on this repository:

-could include technical or other mistakes, inaccuracies or typographical errors. The authors may make changes to the software or 
documentation made available on this repository. -may be out of date, and the authors make no commitment to update such materials. 
The authors assume no responsibility for errors or ommissions in the software or documentation available from its web site.

In no event shall the authors be liable to you or any third parties for any special, punitive, incidental, indirect or consequential 
damages of any kind, or any damages whatsoever, including, without limitation, those resulting from loss of use, data or profits, whether
or not the BGS has been advised of the possibility of such damages, and on any theory of liability, arising out of or in connection with 
the use of this software.

The use of the software downloaded through this repository is done at your own discretion and risk and with agreement that you will be 
solely responsible for any damage to your computer system or loss of data that results from such activities. No advice or information, 
whether oral or written, obtained by you from the BGS or from the BGS web site shall create any warranty for the software.


Instructions:

- Notice that Pyhton 3.7 is required.

- Refer to the paper:
  "Towards an Ontology-Based Framework for a Behavior-Oriented Integration of the IoT, by Domenico Cantone, Carmelo 
  Fabio Longo, Marianna Nicolosi-Asmundo, Daniele Francesco Santamaria, and Corrado Santoro, in Proceedings of the 20th Workshop
  From Objects to Agents, 26-28 June, 2019, Parma, Italy, CEUR Workshop Proceedings"
  for an explanation of the ontology.

1) Download. 
   1.1)Use git clone or download the source code from GitHub.

2) Setup. 
   2.1) Make sure that Python, Maven, and Java are in your system path.
   2.2) Locate and run the "setup.py" file in the folder "main". Wait for the installation and make sure maven terminates without errors.
   2.3) You can now delete the folder "src". All required files are in the folder "target"

3) Running. You have two choices:

   3.1A) The folder "target/python/test" contains two examples, "main-test.pay" and  "client-test.py" which show the overall functioning of 
         the domotic assistant. You can execute them separately, or 
        
   3.1B) The file "main-beta.py" in the folder "target/python" runs a beta version of the domotic assistant. Currently it can install and 
         unistall devices, add and remove users. Run the file "main-beta.py" and wait for it to load. Then, run the file "client-test.py" in "target/python/test"
         that will add and remove a device, add and remove a user.
         
         Stay tuned for updates.
   
   


